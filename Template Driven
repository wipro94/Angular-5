import
{
  NgModule,
  Component,
  OnInit,
  ViewChild
 } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { platformBrowserdynamic } from '@angular/platform-browser-dynamic';

class Signup {
  constructor(public firstName:string = '',
              public lastName:string = '',
              public email:string = '',
              public password:string = '',
              public language:string = '') {
              
  }
 }

@Component({
    selector: 'template-form',
    template: `
<form novalidate #f="ngForm" (ngSubmit)="onSubmit">

  <fieldset ngModelGroup = "name">
    <div class="form-group">
      <label>First Name</label>
      <input type="text"
             class="form-control">
             name="firstName"
             [(ngModel)]="model.firstName"
             required>
    </div>

    <div class="form-group">
      <label>Last Name</label>
      <input type="text"
             class="form-control"
             name="lastName"
             [(ngModel)]="model.lastName"
             required>
    </div>
  </fieldset>
  
  <div class="form-group"
     [ngClass]="{
      'has-danger': email.invalid && (email?.dirty || email.touched),
      'has-success': email.valid && (email?.dirty || .email.touched)
 }">

  <div class="form-group">
    <label>Email</label>
    <input type="email"
           class="form-control"
           name="email"
           [(ngModel)]="model.email"
           required
           pattern="[^ @]*@[^ @]*"
           #email="ngModel">
           
<div class="form-control-feedback"
     *ngIf="email.errors && (email.dirty || email.touched)">
  <p *ngIf="email.errors.required">Email is required</p>
  <p *ngIf="email.errors.minlength">Email must contain at least the @ character</p>
</div>
           
<pre>Valid? {{ f.form.controls.email?.valid }}</pre>
<pre>Dirty? {{ f.form.controls.email?.dirty }}</pre>
<pre>Touched? {{ f.form.controls.email?.touched }}</pre>
  </div>

  <div class="form-group">
    <label>Password</label>
    <input type="password"
           class="form-control"
           name="password"
           [(ngModel)]="model.password"
           required
           minlength="8">
  </div>

  <div class="form-group">
    <label>Language</label>
    <select class="form-control">
            name="language"
            [(ngModel)]="model.language">
      <option value="">Please select a language</option>
      <option *ngFor="let lang of langs"
              [value]="lang"> {{lang}}
      </option>
    </select>
  </div>
  
  <button type="submit" class="btn btn-primary" [disabled]="f.invalid">Submit</button>
  
</form>

<pre>{{ f.value | json }}</pre> 
`
})
class TemplateFormComponent implements OnInit {

model: Signup = new Signup();
@ViewChild('f')form: any;

    langs:string[] = [
        'English',
        'French',
        'German',
    ];
    
    onSubmit() {
    if(this.form.valid) {
    console.log("Form Submitted!");
    this.form.reset();
  }
 }
}

    ngOnInit() {
    }
}

@Component({
    selector: app,
    templateUrl: `<template-form>/<template-form>`
    })
